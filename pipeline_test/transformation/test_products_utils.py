import pytest
import sys
import os
script_dir = os.path.dirname(os.path.abspath(__file__))
root_dir = os.path.normpath(os.path.join(os.path.dirname(os.path.abspath(__file__)), '../..'))

sys.path.insert(0,root_dir)

from pipeline.transformation.products_utils import clean_product_name, round_off_price

class TestCleanProductName(object):

        def test_clean_product_name_w_quotes(self):
            assert clean_product_name('"""') == ""
        def test_clean_product_name_w_consequtive_quotes(self):

            assert clean_product_name('"Product with "" consecutive quotes"') == "Product with  consecutive quotes"  

        def test_clean_product_name_hash_symbol(self):
            input_string = 'Product with # hash symbol'
            expected_output = 'Product with  hash symbol'
            assert(clean_product_name(input_string)) == expected_output

        def test_clean_product_name_special_characters(self):
            input_string = 'Product with & special @ characters!'
            expected_output = 'Product with  special  characters'
            assert(clean_product_name(input_string))== expected_output

        def test_clean_product_name_whitespace(self):
            input_string = '   Product with leading and trailing whitespace   '
            expected_output = 'Product with leading and trailing whitespace'
            assert(clean_product_name(input_string))== expected_output


class TestRoundOffPrice(object):

    def test_round_off_price(self):
        assert round_off_price(10.12345) == 10.12
        assert round_off_price(10.126) == 10.13
        assert round_off_price(10.12) == 10.12
        assert round_off_price(10.1) == 10.1
        assert round_off_price(10.0) == 10.0
        assert round_off_price(10) == 10
        assert round_off_price(0) == 0
        assert round_off_price(0.0) == 0.0
        assert round_off_price(0.123) == 0.12
        assert round_off_price(0.126) == 0.13



















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































